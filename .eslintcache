[{"D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\App.js":"1","D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\components\\Navbar.js":"2","D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\components\\CountriesList.js":"3","D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\components\\CountryDetails.js":"4"},{"size":765,"mtime":1632413549104,"results":"5","hashOfConfig":"6"},{"size":298,"mtime":1632406444525,"results":"7","hashOfConfig":"6"},{"size":745,"mtime":1632413351241,"results":"8","hashOfConfig":"6"},{"size":2446,"mtime":1632413064225,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"18v9hsm",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\App.js",["20"],"D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\components\\Navbar.js",["21"],"import { Link, NavLink } from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n      <nav class=\"navbar navbar-dark bg-primary mb-3\">\r\n      <div class=\"container\">\r\n      <Link class=\"navbar-brand\" href=\"/\">WikiCountries</Link>\r\n      </div>\r\n      </nav>\r\n  );\r\n}\r\n\r\n\r\n\r\n \r\n","D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\components\\CountriesList.js",[],"D:\\Ironhack\\Week 7\\lab-wiki-countries\\src\\components\\CountryDetails.js",["22","23","24"],"import { Link } from \"react-router-dom\";\r\nimport countriesData from \"../countries.json\";\r\nimport {useState} from 'react';\r\n\r\nexport default function CountryDetails(props) {\r\n\r\n    const {countries} = props\r\n    const currentCountryId = props.match.params.alpha3code\r\n\r\n    const foundCountry = countries.find((countrieObj)=>{\r\n    return countrieObj.alpha3Code === currentCountryId\r\n    })\r\n\r\n    console.log(\"found country\", foundCountry)\r\n    \r\n    return (\r\n        <div>\r\n            <img src={\"https:www.countryflags.io/\"+countries.alpha2Code+\"/flat/32.png\"} className=\"countryImage\"/>\r\n            <h1>{countries.name}</h1>\r\n            <div className=\"col-7\">\r\n            <img src=\"https://restcountries.eu/data/fra.svg\" alt=\"country flag\"/>\r\n            <h1>{foundCountry.name}</h1>\r\n            <table className=\"table\">\r\n              <thead></thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td >Capital</td>\r\n                  <td>{foundCountry.capital}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Area</td>\r\n                  <td>\r\n                  {foundCountry.area}<sup>2</sup>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Borders</td>\r\n                     <td>{foundCountry.borders.map((countryCode, i)=>{\r\n                      return(\r\n                          <li key={'bordersid'+i}>\r\n                              <Link to={`/${countryCode}`} >\r\n                                {props.countries.map((country, i)=>{\r\n                                    \r\n                                    if (country.alpha3Code === countryCode){\r\n                                        console.log('this is the country',country)\r\n                                        return(\r\n                                           \r\n                                            <p key={'border' + i}>{country.name}</p>\r\n                                        )\r\n                                    }else{\r\n                                        return null;\r\n                                    }\r\n                                })}\r\n                              </Link>\r\n                          </li>\r\n                          \r\n                      )\r\n                  })}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"25","severity":1,"message":"26","line":11,"column":23,"nodeType":"27","messageId":"28","endLine":11,"endColumn":37},{"ruleId":"25","severity":1,"message":"29","line":1,"column":16,"nodeType":"27","messageId":"28","endLine":1,"endColumn":23},{"ruleId":"25","severity":1,"message":"30","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":21},{"ruleId":"25","severity":1,"message":"31","line":3,"column":9,"nodeType":"27","messageId":"28","endLine":3,"endColumn":17},{"ruleId":"32","severity":1,"message":"33","line":18,"column":13,"nodeType":"34","endLine":18,"endColumn":115},"no-unused-vars","'setCountryData' is assigned a value but never used.","Identifier","unusedVar","'NavLink' is defined but never used.","'countriesData' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]