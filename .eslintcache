[{"/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/App.js":"1","/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/index.js":"2","/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/components/Navbar/Navbar.js":"3","/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/components/CountriesList/CountriesList.js":"4","/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/components/CountryDetails/CountryDetails.js":"5"},{"size":1153,"mtime":1645642319087,"results":"6","hashOfConfig":"7"},{"size":279,"mtime":1645633288789,"results":"8","hashOfConfig":"7"},{"size":242,"mtime":1645631160921,"results":"9","hashOfConfig":"7"},{"size":698,"mtime":1645642358703,"results":"10","hashOfConfig":"7"},{"size":2191,"mtime":1645643804603,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wvyd32",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/App.js",[],"/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/index.js",[],"/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/components/Navbar/Navbar.js",[],"/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/components/CountriesList/CountriesList.js",["23"],"/Users/drewan/Desktop/projects/ironhack-week7/lab-wiki-countries/src/components/CountryDetails/CountryDetails.js",["24"],"import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\n\nconst CountryDetails = () => {\n\n    const { countryCode } = useParams()\n    const [disCountry, setDisCountry] = useState([])\n\n    useEffect(() => {\n        axios\n            .get(`https://ih-countries-api.herokuapp.com/countries/${countryCode}`)\n            .then(response => setDisCountry(response.data))\n    }, [countryCode])\n\n\n    return (\n        // No supimos el por qué no funciona :(\n        <div>\n            {\n                disCountry.map(elm => {\n                    return <div key={elm.name.common}>\n                        <img src={`https://flagpedia.net/data/flags/icon/72x54/${elm.alpha2Code.toLowerCase()}.png`} style={{ width: '300px' }} alt=\"flag image\" />\n                        <h1>{elm.name.common}</h1>\n                        <table className=\"table\">\n                            <thead></thead>\n                            <tbody>\n                                <tr>\n                                    <td style={{ width: '30%' }}>Capital</td>\n                                    <td>{elm.capital}</td>\n                                </tr>\n                                <tr>\n                                    <td>Area</td>\n                                    <td>\n                                        {elm.area} km <sup>2</sup>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Borders</td>\n                                    <td>\n                                        <ul>\n                                            {elm.borders.map(allBorders => {\n                                                return <li><Link to={`/${allBorders}`}>{allBorders}</Link></li>\n                                            })}\n                                        </ul>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                })\n            }\n        </div>\n    )\n}\n\nexport default CountryDetails",{"ruleId":"25","severity":1,"message":"26","line":11,"column":29,"nodeType":"27","endLine":11,"endColumn":168},{"ruleId":"25","severity":1,"message":"26","line":23,"column":25,"nodeType":"27","endLine":23,"endColumn":164},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]